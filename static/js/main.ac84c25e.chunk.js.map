{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","id","username","getUser","userId","usersFromServer","find","App","useState","list","setList","setUserId","setTitle","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","length","prevList","type","placeholder","value","onChange","target","trim","selected","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac84c25e.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <ul className=\"TodoList\">\n    {todos.map((todo) => (\n      <li\n        key={todo.id}\n      >\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todos } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [list, setList] = useState(todos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const clearFields = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setErrorUser(true);\n    }\n\n    if (!title) {\n      setErrorTitle(true);\n    }\n\n    if (title && userId) {\n      const todo: Todos = {\n        id: list.length + 1,\n        title,\n        completed: false,\n        userId: +userId,\n        user: getUser(+userId),\n      };\n\n      setList((prevList) => [...prevList, todo]);\n      clearFields();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value.trim());\n              setErrorTitle(false);\n            }}\n          />\n\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              const {\n                value,\n              } = event.target;\n\n              setUserId(+value);\n              setErrorUser(false);\n            }}\n          >\n            <option value=\"0\" selected disabled>Choose a user</option>\n            {\n              usersFromServer.map((user) => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))\n            }\n          </select>\n\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={list} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}